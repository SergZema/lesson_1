# Задание 9. Обратный анализ чётных чисел
# Контекст
# Вы работаете в научной лаборатории, в ней проводятся эксперименты и записываются результаты в виде списка целых чисел.
# Ваша задача — написать программу, которая поможет исследователям выделить чётные числа из списка результатов экспериментов.
# Они хотят анализировать эти числа в обратном порядке, чтобы исследовать особые закономерности, связанные с чётными значениями.
# Задача
# Напишите программу, которая считывает целые числа из списка и выводит из него только чётные в обратном порядке.
# Создавать дополнительные списки нельзя.r
# Ограничения
# Нельзя использовать:
# •	метод reverse,
# •	функцию reversed,
# •	разворот при помощи среза (список[::-1]).
# Советы
# •	Вы можете управлять направлением перебора элементов в списке (можете перебирать элементы с начала до конца,
# а можете начать с конца и двигаться к началу). Это может стать основой решения за-дачи.
# •	Список является изменяемым типом данных, значит вы можете изменять положение элементов внутри списка.
# Это может стать основой ещё одного варианта решения задачи. Можете выбрать любой или решить обоими способами!
# •	Обратите внимание: некоторые операции со списками создают их копии, даже если вы не указываете на это явно.
# Простой пример, который это демонстрирует:
# test = [1, 2, 3]
# print(id(test)) # Здесь вы увидите один айди
# test = test[::-1]
# print(id(test)) # А здесь уже другой

from random import randint

lst = [randint(-100, 100) for i in range(10)] # Генерация списка чисел
print(lst)
count = 0
for i in range(len(lst)):  # Смещаем четные числа в левую часть списка
    if lst[i] %2 != 0:
        continue
    t = lst[i]
    lst[count] = t
    count +=1

lst = lst[:count-i-1]    # Срезаем правую часть списка с нечетными числами

print(lst)

for i in range(1, len(lst)):  # Сортируем список по убыванию
    if lst[i] <= lst[i - 1]:
        continue
    t = lst[i]
    while i > 0 and lst[i - 1] < t:
        lst[i] = lst[i - 1]
        i -= 1
    lst[i] = t
print(lst)